FROM php:7.2-fpm

ARG user
ARG uid

ENV EXT_REDIS_VERSION=4.3.0 EXT_IGBINARY_VERSION=3.0.1

COPY ./App/config.sh /config.sh
RUN chmod +x /config.sh


RUN apt-get update && apt-get install -y \
    autoconf         \
    automake         \
    libtool          \
    make             \
    g++              \
    git              \
    curl             \
    libpng-dev       \
    libonig-dev      \
    libxml2-dev      \
    zip              \
    unzip            \
    libboost-all-dev \
    nodejs           \
    npm              \
    screen           \
    && docker-php-ext-install pdo_mysql \
    && docker-php-ext-install mbstring \
    && docker-php-ext-install exif \
    && docker-php-ext-install pcntl \
    && docker-php-ext-install bcmath \
    && docker-php-ext-install gd \
    && docker-php-source delete


# Clear cache
RUN apt-get clean && rm -rf /var/lib/apt/lists/*


# Get latest Composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer


# Create system user to run Composer and Artisan Commands
RUN useradd -G www-data,root -u $uid -d /home/$user $user
RUN mkdir -p /home/$user/.composer && \
    chown -R $user:$user /home/$user


# REDIS
RUN docker-php-source extract \
    # igbinary
    && mkdir -p /usr/src/php/ext/igbinary \
    && curl -fsSL https://github.com/igbinary/igbinary/archive/$EXT_IGBINARY_VERSION.tar.gz | tar xvz -C /usr/src/php/ext/igbinary --strip 1 \
    && docker-php-ext-install igbinary \
    # redis
    && mkdir -p /usr/src/php/ext/redis \
    && curl -fsSL https://github.com/phpredis/phpredis/archive/$EXT_REDIS_VERSION.tar.gz | tar xvz -C /usr/src/php/ext/redis --strip 1 \
    && docker-php-ext-configure redis --enable-redis-igbinary \
    && docker-php-ext-install redis \
    # cleanup
    && docker-php-source delete


# PROTOBUF
RUN cd /usr/local \
    && git clone https://github.com/google/protobuf.git \
    && cd protobuf \
    && git submodule update --init --recursive \
    && ./autogen.sh \
    && ./configure \
    && make \
    && make check \
    && make install \
    && ldconfig


# mysql_xdevapi
RUN cd /usr/local \
    && pecl download mysql_xdevapi \
    && tar -xzf *.tgz \
    && cd mysql_xdevapi* \
    && phpize \
    && ./configure --with-boost=/usr/lib/x86_64-linux-gnu --with-protobuf=/usr/local/lib \
    && make \
    && make install \
    && echo "extension=mysql_xdevapi.so" > /usr/local/etc/php/conf.d/mysql_xdevapi.ini

# Set working directory
WORKDIR /var/www

# ENTRYPOINT ["/config.sh"]
# CMD ["laravel-echo-server", "start"]

USER $user
